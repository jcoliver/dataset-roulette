[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Who are we?\nWe are a group of data science educators, based at the University of Arizona. We all generally have jobs where we both teach and do things with data and wanted to provide an opportunity outside of the classroom and workshop settings for people to learn about how we do the data voodoo."
  },
  {
    "objectID": "www/equal-pay.html",
    "href": "www/equal-pay.html",
    "title": "Equal Pay data",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ──\n\n\n✔ ggplot2 3.4.2     ✔ purrr   0.3.4\n✔ tibble  3.2.1     ✔ dplyr   1.1.2\n✔ tidyr   1.2.0     ✔ stringr 1.4.0\n✔ readr   2.1.2     ✔ forcats 0.5.2\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\n\n\nRead the data in\n\nequal_pay <- read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-03-05/jobs_gender.csv\")\n\nRows: 2088 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): occupation, major_category, minor_category\ndbl (9): year, total_workers, workers_male, workers_female, percent_female, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nExplore data\n\nequal_pay %>% # pipe, \"and then\"\n  count(year)\n\n\n\n  \n\n\n\n\n\nBox plot\n\nequal_pay %>% \n  ggplot(aes(y = major_category,\n             x = percent_female)) +\n  geom_boxplot()\n\n\n\n\n\n\nBar plot\n\nmean_female_per_category <- equal_pay %>% \n  group_by(major_category) %>% \n  summarize(mean = mean(percent_female))\n\nmean_female_per_category\n\n\n\n  \n\n\n\n\nmean_female_per_category %>% \n  ggplot(aes(y = reorder(major_category, mean),\n             x = mean,\n             label = round(mean, 2))) +\n  geom_col() +\n  geom_label()\n\n\n\n\n\n\nScatterplot\n\nequal_pay %>% \n  ggplot(aes(x = percent_female,\n             y = wage_percent_of_male,\n             color = major_category)) +\n  geom_point()\n\nWarning: Removed 846 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\nequal_pay %>% \n  filter(major_category == \"Computer, Engineering, and Science\") %>% \n  ggplot(aes(x = factor(year),\n             y = percent_female,\n             color = factor(year))) +\n  geom_jitter() +\n  labs(x = \"year\",\n       y = \"percent female\",\n       color = \"year\") +\n  theme_linedraw()"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Dataset Roulette",
    "section": "",
    "text": "This is the website for Dataset Roulette, an informal opportunity to see how data professionals actually deal with, well, data. Working with a dataset that they’ve never seen before, a data scientist/engineer/wrangler/enthusiast will explore, analyze, and visualize data using open source software. Look at the Data & Code section for links to datasets, code, and recordings of us trying to wring meaning from data."
  },
  {
    "objectID": "data_code.html",
    "href": "data_code.html",
    "title": "Data & Code",
    "section": "",
    "text": "These are example datasets that we have used in our Dataset Roulette sessions. We will add more as they come along!\n\n\n\n\n\nDate\nName\nData\nData source\nR code\nPython code\nYouTube\n\n\n\n\n2023-02-15\nTuskegee Airmen\nCSV\nTidy Tuesday\nR code\n\nWatch\n\n\n2023-03-15\nJobs & Gender\nCSV\nTidy Tuesday\nR code\nPython code\nWatch\n\n\n2023-04-19\nProject Feeder Watch\nCSV\nTidy Tuesday\nR code\n\nWatch"
  }
]